-- MySQL Script generated by MySQL Workbench
-- Sat Jun  2 21:10:56 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema supermarket
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema supermarket
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `supermarket` DEFAULT CHARACTER SET utf8 ;
USE `supermarket` ;

-- -----------------------------------------------------
-- Table `supermarket`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `supermarket`.`employee` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `date_of_birth` DATE NOT NULL,
  `department` VARCHAR(45) NOT NULL,
  `salary` DECIMAL(7,2) NULL,
  `bank_account` VARCHAR(45) NULL,
  `job_title` VARCHAR(70) NULL,
  `phone_number` INT NULL,
  `email` VARCHAR(250) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `supermarket`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `supermarket`.`item` (
  `sku` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `qty_shop` INT NULL,
  `qty_warehouse` INT NULL,
  `category` VARCHAR(45) NULL,
  `price` DECIMAL(7,2) NULL,
  PRIMARY KEY (`sku`))
ENGINE = InnoDB
COMMENT = '				';


-- -----------------------------------------------------
-- Table `supermarket`.`sale`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `supermarket`.`sale` (
  `transaction_num` INT ZEROFILL NOT NULL AUTO_INCREMENT,
  `qty` INT NULL,
  `value` DECIMAL(8,2) NULL,
  `date_time` DATETIME NOT NULL,
  `staff_id` INT NOT NULL,
  PRIMARY KEY (`transaction_num`),
  INDEX `staff_id_idx` (`staff_id` ASC),
  CONSTRAINT `staff_id`
    FOREIGN KEY (`staff_id`)
    REFERENCES `supermarket`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `supermarket`.`vendor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `supermarket`.`vendor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(255) NULL,
  `phone_number` INT NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `bank_account` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `supermarket`.`purchase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `supermarket`.`purchase` (
  `transaction_num` INT NOT NULL AUTO_INCREMENT,
  `qty` INT NULL,
  `value` INT NULL,
  `date_of_pur` DATE NOT NULL,
  `date_of_receiving` DATE NOT NULL,
  `vendor_id` INT NOT NULL,
  `staff_id` INT NOT NULL,
  PRIMARY KEY (`transaction_num`),
  INDEX `vendor_id_idx` (`vendor_id` ASC),
  INDEX `staff_id_idx` (`staff_id` ASC),
  CONSTRAINT `vendor_id`
    FOREIGN KEY (`vendor_id`)
    REFERENCES `supermarket`.`vendor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `staff_id`
    FOREIGN KEY (`staff_id`)
    REFERENCES `supermarket`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `supermarket`.`Sale_transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `supermarket`.`Sale_transaction` (
  `transaction_number` INT NOT NULL,
  `item_sku` INT NOT NULL,
  `qty` INT NULL,
  INDEX `item_sku_idx` (`item_sku` ASC),
  INDEX `transaction_number_idx` (`transaction_number` ASC),
  CONSTRAINT `item_sku`
    FOREIGN KEY (`item_sku`)
    REFERENCES `supermarket`.`item` (`sku`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `transaction_number`
    FOREIGN KEY (`transaction_number`)
    REFERENCES `supermarket`.`sale` (`transaction_num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `supermarket`.`purchase_transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `supermarket`.`purchase_transaction` (
  `transaction_number` INT NOT NULL,
  `item_sku` INT NOT NULL,
  `item_cost` DECIMAL(7,2) NULL,
  `qty` INT NULL,
  INDEX `transaction_number_idx` (`transaction_number` ASC),
  INDEX `item_sku_idx` (`item_sku` ASC),
  CONSTRAINT `transaction_number`
    FOREIGN KEY (`transaction_number`)
    REFERENCES `supermarket`.`purchase` (`transaction_num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `item_sku`
    FOREIGN KEY (`item_sku`)
    REFERENCES `supermarket`.`item` (`sku`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `supermarket`.`item_update`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `supermarket`.`item_update` (
  `item_sku` INT NOT NULL,
  `staff_id` INT NOT NULL,
  `update_date_time` DATETIME NOT NULL,
  `description` MEDIUMTEXT NULL,
  INDEX `item_sku_idx` (`item_sku` ASC),
  INDEX `staff_id_idx` (`staff_id` ASC),
  CONSTRAINT `item_sku`
    FOREIGN KEY (`item_sku`)
    REFERENCES `supermarket`.`item` (`sku`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `staff_id`
    FOREIGN KEY (`staff_id`)
    REFERENCES `supermarket`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
